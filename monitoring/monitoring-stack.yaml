apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-config
  namespace: confluent
data:
  configuration: |
    global:
      scrape_interval: 50s
      evaluation_interval: 60s
      scrape_timeout: 50s

    scrape_configs:
      - job_name: 'prometheus'
        static_configs:
          - targets: [ 'localhost:9090' ]
      - job_name: 'kafka'
        static_configs:
          - targets: [ 'kafka.confluent.svc.cluster.local:7778' ]
      - job_name: 'zookeeper'
        static_configs:
          - targets: [ 'zookeeper.confluent.svc.cluster.local:7778' ]
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-datasource-config
  namespace: confluent
data:
  configuration: |
    apiVersion: 1
    datasources:
    - name: Prometheus
      type: prometheus
      url: http://prometheus-0:9090
      jsonData:
        httpMethod: POST
        manageAlerts: true
        prometheusType: Prometheus
        prometheusVersion: 2.37.0
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: grafana-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: prometheus
  namespace: confluent
  labels:
    app: prometheus
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prometheus
  template:
    metadata:
      labels:
        app: prometheus
    spec:
      containers:
      - name: prometheus
        image: prom/prometheus
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 9090
          protocol: TCP
        resources:
          requests:
            cpu: 150m
            memory: 256Mi
          limits:
            cpu: 300m
            memory: 512Mi
        volumeMounts:
          - name: prom-config
            mountPath: /etc/prometheus/prometheus.yml
            subPath: configuration
      volumes:
      - name: prom-config
        configMap:
          name: prometheus-config
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  namespace: confluent
  labels:
    app: grafana
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      containers:
      - name: grafana
        image: grafana/grafana
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 3000
          protocol: TCP
        resources:
          requests:
            cpu: 250m
            memory: 512Mi
          limits:
            cpu: 500m
            memory: 768Mi
        volumeMounts:
          - name: datasource-config
            mountPath: /usr/share/grafana/conf/provisioning/datasources/default.yaml
            subPath: configuration
      volumes:
        - name: grafana-pv
          persistentVolumeClaim:
            claimName: grafana-pvc
        - name: datasource-config
          configMap:
            name: grafana-datasource-config            
---
apiVersion: v1
kind: Service
metadata:
  name: prometheus
  namespace: confluent
  labels:
    app: prometheus
spec:
  type: ClusterIP
  ports:
  - port: 9090
    protocol: TCP
    targetPort: 9090
  selector:
    app: prometheus
---
apiVersion: v1
kind: Service
metadata:
  name: grafana
  namespace: confluent
  labels:
    app: grafana
spec:
  type: ClusterIP
  ports:
  - port: 3000
    protocol: TCP
    targetPort: 3000
  selector:
    app: grafana
